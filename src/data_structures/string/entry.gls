# String


### Python string library constants

`import string`

* string.ascii_letters

    The concatenation of the ascii_lowercase and ascii_uppercase constants described below. This value is not locale-dependent.

* string.ascii_lowercaseÂ¶

    The lowercase letters 'abcdefghijklmnopqrstuvwxyz'. This value is not locale-dependent and will not change.

* string.ascii_uppercase

    The uppercase letters 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'. This value is not locale-dependent and will not change.

* string.digits

    The string '0123456789'.

* string.hexdigits

    The string '0123456789abcdefABCDEF'.

* string.octdigits

    The string '01234567'.

* string.punctuation

    String of ASCII characters which are considered punctuation characters in the C locale: !"#$%&'()*+,-./:;<=>?@[\]^_`{|}~.

* string.printable

    String of ASCII characters which are considered printable. This is a combination of digits, ascii_letters, punctuation, and whitespace.

* string.whitespace

    A string containing all ASCII characters that are considered whitespace. This includes the characters space, tab, linefeed, return, formfeed, and vertical tab.


### Python string methods

`s = 'tHIS Is the 7357 $7R1NG... ...'`

* capitalize()
* casefold()
* center()
* count()
* encode()
* endswith()
* expandtabs()
* find()
* format()
* format_map()
* index()
* isalnum()
* isalpha()
* isascii()
* isdecimal()
* isdigit()
* isidentifier()
* islower()
* isnumeric()
* isprintable()
* isspace()
* istitle()
* isupper()
* join()
* ljust()
* lower()
* lstrip()
* maketrans()
* partition()
* replace()
* rfind()
* rindex()
* rjust()
* rpartition()
* rsplit()
* rstrip()
* split()
* splitlines()
* startswith()
* strip()
* swapcase()
* title()
* translate()
* upper()
* zfill()
